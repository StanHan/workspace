## Circuit Breaker相关的属性 ##

# 用来跟踪circuit的健康性，如果未达标则让request短路。默认true
hystrix.command.default.circuitBreaker.enabled = true
#一个rolling window内最小的请求数。如果设为20，那么当一个rolling window的时间内（比如说1个rolling window是10秒）收到19个请求，即使19个请求都失败，也不会触发circuit break。默认20
hystrix.command.default.circuitBreaker.requestVolumeThreshold = 20
#触发短路的时间值，当该值设为5000时，则当触发circuit break后的5000毫秒内都会拒绝request，也就是5000毫秒后才会关闭circuit。默认5000
hystrix.command.default.circuitBreaker.sleepWindowInMilliseconds = 5000
# 错误比率阀值，如果错误率>=该值，circuit会被打开，并短路所有请求触发fallback。默认50
hystrix.command.default.circuitBreaker.errorThresholdPercentage = 50
# 强制打开熔断器，如果打开这个开关，那么拒绝所有request，默认false
hystrix.command.default.circuitBreaker.forceOpen = false
#强制关闭熔断器,如果这个开关打开，circuit将一直关闭且忽略circuitBreaker.errorThresholdPercentage
hystrix.command.default.circuitBreaker.forceClosed = false



##Execution相关的属性的配置：##

#隔离策略，默认是Thread, 可选Thread｜Semaphore
hystrix.command.default.execution.isolation.strategy = THREAD
#命令执行超时时间，默认1000ms
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds = 1000
#执行是否启用超时，默认启用true
hystrix.command.default.execution.timeout.enabled = true
#发生超时是是否中断，默认true
hystrix.command.default.execution.isolation.thread.interruptOnTimeout = true
hystrix.command.default.execution.isolation.thread.interruptOnFutureCancel = false
# 最大并发请求数，默认10，该参数当使用ExecutionIsolationStrategy.SEMAPHORE策略时才有效。如果达到最大并发请求数，请求会被拒绝。
# 理论上选择semaphore size的原则和选择thread size一致，但选用semaphore时每次执行的单元要比较小且执行速度快（ms级别），否则的话应该用thread。 
# semaphore应该占整个容器（tomcat）的线程池的一小部分。
hystrix.command.default.execution.isolation.semaphore.maxConcurrentRequests = 10



##Fallback相关的属性 :  这些参数可以应用于Hystrix的THREAD和SEMAPHORE策略 ##

# 如果并发数达到该设置值，请求会被拒绝和抛出异常并且fallback不会被调用。默认10
hystrix.command.default.fallback.isolation.semaphore.maxConcurrentRequests = 10
# 当执行失败或者请求被拒绝，是否会尝试调用hystrixCommand.getFallback() 。默认true
hystrix.command.default.fallback.enabled = true



## Metrics相关参数 ##

# 设置统计的时间窗口值的，毫秒值，circuit break 的打开会根据1个rolling window的统计来计算。
# 若rolling window被设为10000毫秒，则rolling window会被分成n个buckets，每个bucket包含success，failure，timeout，rejection的次数的统计信息。默认10000
hystrix.command.default.metrics.rollingStats.timeInMilliseconds = 10000
# 设置一个rolling window被划分的数量，若numBuckets＝10，rolling window＝10000，那么一个bucket的时间即1秒。必须符合rolling window % numberBuckets == 0。默认10
hystrix.command.default.metrics.rollingStats.numBuckets = 10
# 执行时是否enable指标的计算和跟踪，默认true
hystrix.command.default.metrics.rollingPercentile.enabled = true
# 设置rolling percentile window的时间，默认60000
hystrix.command.default.metrics.rollingPercentile.timeInMilliseconds = 60000
# 设置rolling percentile window的numberBuckets。逻辑同上。默认6
hystrix.command.default.metrics.rollingPercentile.numBuckets = 6
#  如果bucket size＝100，window＝10s，若这10s里有500次执行，只有最后100次执行会被统计到bucket里去。增加该值会增加内存开销以及排序的开销。默认100
hystrix.command.default.metrics.rollingPercentile.bucketSize = 100

# 记录health 快照（用来统计成功和错误绿）的间隔，默认500ms
hystrix.command.default.metrics.healthSnapshot.intervalInMilliseconds = 500


## Request Context 相关参数 ## 
# 需要重载getCacheKey()，返回null时不缓存，默认true
hystrix.command.default.requestCache.enabled = true
#记录日志到HystrixRequestLog，默认true
hystrix.command.default.requestLog.enabled = true


## 线程池 相关参数  ## 
hystrix.threadpool.default.allowMaximumSizeToDivergeFromCoreSize = false
hystrix.threadpool.default.coreSize = 10
hystrix.threadpool.default.maximumSize = 10
hystrix.threadpool.default.keepAliveTimeMinutes = 1
hystrix.threadpool.default.maxQueueSize = -1
hystrix.threadpool.default.queueSizeRejectionThreshold = 5
hystrix.threadpool.default.metrics.rollingStats.timeInMilliseconds = 10000
hystrix.threadpool.default.metrics.rollingStats.numBuckets = 10

